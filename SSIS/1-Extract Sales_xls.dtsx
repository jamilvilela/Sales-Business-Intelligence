<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/9/2020 9:39:35 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-JAMIL"
  DTS:CreatorName="LAPTOP-JAMIL\jamil"
  DTS:DTSID="{C609F503-D0E8-464D-B36D-935FECF5CF24}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.166"
  DTS:LocaleID="1033"
  DTS:ObjectName="1-Extract Sales_xls"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="366"
  DTS:VersionGUID="{386F9198-2627-4B06-B096-FE76EB71A916}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Sales.xlsx]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{93A56B50-136A-4120-9DA7-D8437325A438}"
      DTS:ObjectName="Sales.xlsx">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::SourceFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\DataProjects\Sales\DataSource\Sales.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A2C19EF6-45AD-4A35-B699-00ABCF7AB284}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="REPLACE(REPLACE(REPLACE( LEFT( @[User::SalesFileName], FINDSTRING( @[User::SalesFileName], &quot;.&quot;, 1 )-1)+&quot;-&quot;+ (DT_WSTR, 100) GETDATE(),&quot;.&quot;,&quot;&quot;),&quot;:&quot;,&quot;&quot;),&quot; &quot;, &quot;-&quot;) + RIGHT( @[User::SalesFileName], FINDSTRING( @[User::SalesFileName], &quot;.&quot;, 1 )-1)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DestinationFileName">
      <DTS:VariableValue
        DTS:DataType="8">Sales-2021-06-13-192909454000000.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7E0DFBA5-A9D0-41F7-8155-9EFF5F0C27B0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileExists">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EAE54D35-FBCC-4BAA-833E-B416CA93F888}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ProcessedPath]+  @[User::DestinationFileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessedFileName">
      <DTS:VariableValue
        DTS:DataType="8">C:\DataProjects\Sales\DataSource\Processed\Sales-2021-06-13-192909455000000.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{38FC88A6-9942-44DE-BEE9-90A7300614D8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::SalesFileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SalesFileName">
      <DTS:VariableValue
        DTS:DataType="8">Sales.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A375CE56-7242-47EB-8801-6530199D133C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::SalesFilePath]+ @[User::SalesFileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFileName">
      <DTS:VariableValue
        DTS:DataType="8">C:\DataProjects\Sales\DataSource\Sales.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{044C2B37-EFF9-4EF0-B268-2D1B8E324B52}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TotalInsert">
      <DTS:VariableValue
        DTS:DataType="21">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\do Logging - finish"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="do Logging"
      DTS:DTSID="{ac775ec8-90db-46fd-900a-a939aca6177f}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="do Logging - finish"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A19D8945-CCF6-4326-A823-0DE3907DE37D}"
          SQLTask:SqlStatementSource="insert into audit.log&#xA;(error_code ,error_column, date_time, description)&#xA;values&#xA;(null, null,getdate(),'Error loading staging area')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Looping in Sales files"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{D4A2A735-6A18-4469-98C9-4D18EC63C15E}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Looping in Sales files">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{625D5DE0-0356-4138-8198-F8F475703EB1}"
        DTS:ObjectName="{625D5DE0-0356-4138-8198-F8F475703EB1}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[$Project::SalesFilePath]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\DataProjects\Sales\DataSource\" />
            <FEFEProperty
              FileSpec="Sales*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Looping in Sales files\Create directory Processed"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="Create directory Processed"
          DTS:DTSID="{58355809-FD8E-4B34-A558-75776627B370}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create directory Processed"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="CreateDirectory"
              TaskOverwriteDestFile="True"
              TaskSourcePath="$Project::ProcessedPath"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Looping in Sales files\do Logging - end"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="do Logging"
          DTS:DTSID="{3db0b5d8-0faa-4c32-b57d-8108013719b1}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="do Logging - end"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A19D8945-CCF6-4326-A823-0DE3907DE37D}"
              SQLTask:SqlStatementSource="insert into audit.log&#xA;(error_code ,error_column, date_time, description)&#xA;values&#xA;(null, null,getdate(),'Finishing to load staging area')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Looping in Sales files\do Logging - finish"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="do Logging"
          DTS:DTSID="{ae9f4e79-b44c-4342-b59e-14a3ccccf1e6}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="do Logging - finish"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A19D8945-CCF6-4326-A823-0DE3907DE37D}"
              SQLTask:SqlStatementSource="insert into audit.log&#xA;(error_code ,error_column, date_time, description)&#xA;values&#xA;(null, null,getdate(),'Finishing to load staging area')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Looping in Sales files\do Logging - start"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="do Logging"
          DTS:DTSID="{66160E42-1ADA-4AAB-8D82-58A10AD94696}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="do Logging - start"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A19D8945-CCF6-4326-A823-0DE3907DE37D}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="insert into audit.log&#xA;(error_code ,error_column, date_time, description)&#xA;values&#xA;(null, null,getdate(),'Starting to load staging area')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Looping in Sales files\File exists?"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{C9F5BCCA-AC49-472D-928D-A708BE5C29C4}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="File exists?"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_45e2e7a7c59249189b5e6bb16dfe7405"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::SourceFileName"
              ReadWriteVariables="User::FileExists">
              <ProjectItem
                Name="ST_45e2e7a7c59249189b5e6bb16dfe7405.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{28A160C5-3031-44D4-A5CC-B2E6C1B37A1E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_45e2e7a7c59249189b5e6bb16dfe7405</RootNamespace>
    <AssemblyName>ST_45e2e7a7c59249189b5e6bb16dfe7405</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_45e2e7a7c59249189b5e6bb16dfe7405.Properties.Settings.get_Default():ST_45e2e7a7c59249189b5e6bb16dfe7405.Properties.Sett" +
    "ings")]

namespace ST_45e2e7a7c59249189b5e6bb16dfe7405.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[
#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System.IO;
using Microsoft.SqlServer.Dts.Runtime;
#endregion

namespace ST_45e2e7a7c59249189b5e6bb16dfe7405
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here 


            Dts.Variables["User::FileExists"].Value = File.Exists(Dts.Variables["User::SourceFileName"].Value.ToString());

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_45e2e7a7c59249189b5e6bb16dfe7405</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_45e2e7a7c59249189b5e6bb16dfe7405</msb:DisplayName>
    <msb:ProjectId>{2AED625C-E52C-4324-9C49-78C879F14776}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_45e2e7a7c59249189b5e6bb16dfe7405.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_45e2e7a7c59249189b5e6bb16dfe7405")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_45e2e7a7c59249189b5e6bb16dfe7405")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_45e2e7a7c59249189b5e6bb16dfe7405.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_45e2e7a7c59249189b5e6bb16dfe7405.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_45e2e7a7c59249189b5e6bb16dfe7405.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_45e2e7a7c59249189b5e6bb16dfe7405.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_45e2e7a7c59249189b5e6bb16dfe7405.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_45e2e7a7c59249189b5e6bb16dfe7405.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFfvul8AAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAFi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMQtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAHA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD4
LQAAAAAAAEgAAAACAAUAFCEAAPgLAAABAAAAAAAAAAwtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwBQAAAAAAAAAAIoEAAACm8RAAAKcgEAAHBvEgAACgIo
EAAACm8RAAAKciMAAHBvEgAACm8TAAAKbxQAAAooFQAACowcAAABbxYAAAoCKBAAAAoWbxcAAAoq
HgIoGAAACioeAigZAAAKKq5+AQAABC0eck0AAHDQAwAAAigaAAAKbxsAAApzHAAACoABAAAEfgEA
AAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKB0AAAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAA
AAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADQAwAAI34AADwEAACEBQAAI1N0cmluZ3MAAAAAwAkA
AMAAAAAjVVMAgAoAABAAAAAjR1VJRAAAAJAKAABoAQAAI0Jsb2IAAAAAAAAAAgAAAVcdoAEJAwAA
APoBMwAWAAABAAAAHwAAAAUAAAAGAAAACQAAAAEAAAAdAAAAAgAAABAAAAACAAAAAwAAAAQAAAAB
AAAABAAAAAEAAAABAAAAAACOAwEAAAAAAAYANAJmBAYAwwJmBAYAgAFTBA8A2gQAAAYArQEUBAYA
FwIUBAYA+AEUBAYAqgIUBAYAVAIUBAYAbQIUBAYAxAEUBAYA3wH7AgoAiAI9AwoA/wA9AwYAxgO/
AwYAYwFTBAYAVAW/AwYANgSGBAYAJgT/Aw4AMwF4Aw4AlAF4Aw4AGwHqAwYASAFmBAoAZgM9AxIA
HAWqABIAeACqAAYApQAuAAYA1wO/AwYAygC/AwYAgQC/AwYAegUUBAAAAAAlAAAAAAABAAEAAQAQ
AN8DAQA5AAEAAQAAABAAjQTpBEUAAQADAAABEAAmBekEWQADAAcAAwEAAD8FAAA9AAQACgARAMsD
bAARAO8AcAARAGgAdAAGBlcAeABWgC8FewBWgM8AewBQIAAAAACGAOUDBgABAKwgAAAAAIYYRgQG
AAEAtCAAAAAAgxhGBAYAAQC8IAAAAACTCDIEfwABAOggAAAAAJMI1wCEAAEA7yAAAAAAkwjjAIkA
AQD3IAAAAACWCFsFjwACAP4gAAAAAIYYRgQGAAIABiEAAAAAkRhMBJQAAgAAAAEA9QIJAEYEAQAR
AEYEBgAZAEYECgApAEYEEAAxAEYEEAA5AEYEEABBAEYEEABJAEYEEABRAEYEEABZAEYEEABhAEYE
EABpAEYEBgCBAEYEBgCpAEYEFQC5AEYEBgBxADcFGwDBABgFIADJALYDJQDRAOECKwCJABUDLwDZ
AE0FMwDRAOsCOADBAGcFAQBxAEYEBgCJAEYEBgDpAJMAPQDpAHYFRACRAEYESQCxAEYEBgAIABQA
YgAIABgAZwApAHMAzwAuAAsApwAuABMAsAAuABsAzwAuACMA2AAuACsAAQEuADMAAQEuADsAAQEu
AEMA2AAuAEsABwEuAFMAAQEuAFsAHgFDAGMAZwBJAHMAzwBhAHsAZwBjAGsAZwADAAEABAADAAAA
NgSYAAAA9wCdAAAAXwWiAAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAzx2TjQAAAAAA
AAEAAAAEAAAAAAAAAAAAAABQAF8AAAAAAA8AAAAAAAAAAAAAAFkAHgMAAAAABAAAAAAAAAAAAAAA
UAC/AwAAAAAPAAAAAAAAAAAAAABZADgAAAAAAAAAAAABAAAAlwQAAAUAAgAAAAAAAFNUXzQ1ZTJl
N2E3YzU5MjQ5MTg5YjVlNmJiMTZkZmU3NDA1ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQu
U3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAVmFy
aWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmli
dXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxh
eGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29t
cGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0
X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0
LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlw
dFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzQ1ZTJlN2E3
YzU5MjQ5MTg5YjVlNmJiMTZkZmU3NDA1LmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJj
ZU1hbgBCb29sZWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdl
cgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF80NWUyZTdhN2M1OTI0OTE4OWI1ZTZiYjE2ZGZl
NzQwNS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfNDVl
MmU3YTdjNTkyNDkxODliNWU2YmIxNmRmZTc0MDUuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNl
dHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAEV4aXN0cwBPYmplY3QAZ2V0X0Rl
ZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AAAAIVUAcwBlAHIAOgA6AEYAaQBsAGUA
RQB4AGkAcwB0AHMAAClVAHMAZQByADoAOgBTAG8AdQByAGMAZQBGAGkAbABlAE4AYQBtAGUAAHFT
AFQAXwA0ADUAZQAyAGUANwBhADcAYwA1ADkAMgA0ADkAMQA4ADkAYgA1AGUANgBiAGIAMQA2AGQA
ZgBlADcANAAwADUALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAABT
C8YpedMkS7aKbacN9aM+AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFRBCAAEmEEIAASZQUgARJp
HAMgABwDIAAOBAABAg4EIAEBHAYAARJ1EXkEIAASfQYgAgEOEn0It3pcVhk04IkIiYRdzYCAzJEE
AAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAAS
SQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAA
AAAAKAEAI1NUXzQ1ZTJlN2E3YzU5MjQ5MTg5YjVlNmJiMTZkZmU3NDA1AAAFAQAAAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAOwtAAAAAAAAAAAA
AAYuAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4LQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCTjc8dAAABAJONzx0/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADQANQBlADIAZQA3AGEANwBjADUAOQAyADQAOQAxADgAOQBiADUAZQA2AGIAYgAx
ADYAZABmAGUANwA0ADAANQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADYAMwAxAC4AMwA2ADIANAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADQANQBlADIAZQA3AGEANwBjADUAOQAyADQAOQAxADgAOQBiADUAZQA2AGIAYgAxADYA
ZABmAGUANwA0ADAANQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANAA1AGUAMgBlADcAYQA3AGMANQA5ADIANAA5ADEAOAA5AGIANQBlADYA
YgBiADEANgBkAGYAZQA3ADQAMAA1AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADQANQBlADIAZQA3AGEANwBjADUAOQAyADQAOQAxADgAOQBiADUAZQA2AGIA
YgAxADYAZABmAGUANwA0ADAANQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA2ADMAMQAuADMANgAyADQAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA2ADMAMQAuADMANgAyADQAMwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAYPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Looping in Sales files\Importing Goals"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tarefa Fluxo de Dados"
          DTS:DTSID="{1E58D10E-55E4-4C83-B854-0B15221BF696}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Importing Goals"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="Destino OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos os Direitos Reservados; http://www.microsoft.com/sql/support;4"
                  description="Destino OLE DB"
                  name="Destino OLE DB"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="O tempo em segundos antes que um comando expire. Zero indica uma expiração infinita."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Especifica o nome do objeto de banco de dados usado para abrir um conjunto de linhas."
                      name="OpenRowset">[sales].[RAW_Goals]</property>
                    <property
                      dataType="System.String"
                      description="Especifica a variável que contém o nome do objeto de banco de dados usado para abrir um conjunto de linhas."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="O comando SQL a ser executado."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Especifica a página de código de coluna a ser usada quando não há informações de página de código disponíveis a partir da fonte de dados."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forca o uso do valor da propriedade DefaultCodePage durante a descrição dos dados de caractere."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Especifica o modo usado para acessar o banco de dados."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indica se os valores fornecidos para colunas de identidade serão copiados no destino. Se false, os valores para colunas de identidade serão gerados automaticamente no destino. Aplicável apenas se o carregamento rápido estiver ativado."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indica se as colunas que contêm null terão null inserido no destino. Se false, as colunas que contêm null terão seus valores padrão inseridos no destino. Aplicável apenas se o carregamento rápido estiver ativado."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Especifica as opções a serem usadas com o carregamento rápido. Aplicável apenas se o carregamento rápido estiver ativado."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Especifica quando confirmações são emitidas durante a inserção de dados. Um valor de 0 especifica que uma confirmação será emitida ao final da inserção de dados. Aplicável somente se o carregamento rápido estiver ativado."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Connections[OleDbConnection]"
                      connectionManagerID="{A19D8945-CCF6-4326-A823-0DE3907DE37D}:external"
                      connectionManagerRefId="Project.ConnectionManagers[DB_Stage]"
                      description="A conexão de tempo de execução OLE DB usada para acessar o banco de dados."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB]"
                      errorOrTruncationOperation="Inserir"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="Entrada de Destino OLE DB">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].Columns[Goal2017]"
                          cachedDataType="cy"
                          cachedName="Goal2017"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].ExternalColumns[2017]"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[Goal2017]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].Columns[Goal2018]"
                          cachedDataType="cy"
                          cachedName="Goal2018"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].ExternalColumns[2018]"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[Goal2018]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].Columns[Goal2019]"
                          cachedDataType="cy"
                          cachedName="Goal2019"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].ExternalColumns[2019]"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[Goal2019]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].Columns[Goal2020]"
                          cachedDataType="cy"
                          cachedName="Goal2020"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].ExternalColumns[2020]"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[Goal2020]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].Columns[IDSeller]"
                          cachedDataType="r8"
                          cachedName="IDSeller"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].ExternalColumns[id_seller]"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[IDSeller]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].Columns[SellerName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="SellerName"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].ExternalColumns[seller_name]"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[SellerName]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].ExternalColumns[id_seller]"
                          dataType="i4"
                          name="id_seller" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].ExternalColumns[seller_name]"
                          dataType="wstr"
                          length="255"
                          name="seller_name" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].ExternalColumns[2017]"
                          dataType="numeric"
                          name="2017"
                          precision="18"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].ExternalColumns[2018]"
                          dataType="numeric"
                          name="2018"
                          precision="18"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].ExternalColumns[2019]"
                          dataType="numeric"
                          name="2019"
                          precision="18"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB].ExternalColumns[2020]"
                          dataType="numeric"
                          name="2020"
                          precision="18"
                          scale="4" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Outputs[Saída de Erro de Destino OLE DB]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Saída de Erro de Destino OLE DB"
                      synchronousInputId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Outputs[Saída de Erro de Destino OLE DB].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Outputs[Saída de Erro de Destino OLE DB].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Outputs[Saída de Erro de Destino OLE DB].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Outputs[Saída de Erro de Destino OLE DB].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Looping in Sales files\Importing Goals\Goals"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Origem do Excel;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos os Direitos Reservados; http://www.microsoft.com/sql/support;1"
                  description="Origem do Excel"
                  name="Goals"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="O tempo em segundos antes que um comando expire. Zero indica uma expiração infinita."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Especifica o nome do objeto de banco de dados usado para abrir um conjunto de linhas."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Especifica a variável que contém o nome do objeto de banco de dados usado para abrir um conjunto de linhas."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="O comando SQL a ser executado."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT IDSeller, SellerName, Goal2017, Goal2018, Goal2019, Goal2020
FROM     [Goals$]</property>
                    <property
                      dataType="System.String"
                      description="A variável que contém o comando SQL a ser executado."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Especifica o modo usado para acessar o banco de dados."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="O mapeamento de parâmetros no comando SQL para variáveis."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Looping in Sales files\Importing Goals\Goals.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Sales.xlsx]"
                      connectionManagerRefId="Package.ConnectionManagers[Sales.xlsx]"
                      description="A conexão de tempo de execução OLE DB usada para acessar o banco de dados."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel]"
                      name="Saída de Origem do Excel">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[IDSeller]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].ExternalColumns[IDSeller]"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[IDSeller]"
                          name="IDSeller"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[SellerName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].ExternalColumns[SellerName]"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[SellerName]"
                          name="SellerName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[Goal2017]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].ExternalColumns[Goal2017]"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[Goal2017]"
                          name="Goal2017"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[Goal2018]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].ExternalColumns[Goal2018]"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[Goal2018]"
                          name="Goal2018"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[Goal2019]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].ExternalColumns[Goal2019]"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[Goal2019]"
                          name="Goal2019"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[Goal2020]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].ExternalColumns[Goal2020]"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[Goal2020]"
                          name="Goal2020"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].ExternalColumns[IDSeller]"
                          dataType="r8"
                          name="IDSeller" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].ExternalColumns[SellerName]"
                          dataType="wstr"
                          length="255"
                          name="SellerName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].ExternalColumns[Goal2017]"
                          dataType="cy"
                          name="Goal2017" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].ExternalColumns[Goal2018]"
                          dataType="cy"
                          name="Goal2018" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].ExternalColumns[Goal2019]"
                          dataType="cy"
                          name="Goal2019" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].ExternalColumns[Goal2020]"
                          dataType="cy"
                          name="Goal2020" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel]"
                      isErrorOut="true"
                      name="Saída de Erro de Origem do Excel">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel].Columns[IDSeller]"
                          dataType="r8"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel].Columns[IDSeller]"
                          name="IDSeller" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel].Columns[SellerName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel].Columns[SellerName]"
                          name="SellerName" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel].Columns[Goal2017]"
                          dataType="cy"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel].Columns[Goal2017]"
                          name="Goal2017" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel].Columns[Goal2018]"
                          dataType="cy"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel].Columns[Goal2018]"
                          name="Goal2018" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel].Columns[Goal2019]"
                          dataType="cy"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel].Columns[Goal2019]"
                          name="Goal2019" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel].Columns[Goal2020]"
                          dataType="cy"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel].Columns[Goal2020]"
                          name="Goal2020" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Erro de Origem do Excel].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Looping in Sales files\Importing Goals\Logging audit_log"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="Destino OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos os Direitos Reservados; http://www.microsoft.com/sql/support;4"
                  description="Destino OLE DB"
                  name="Logging audit_log"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="O tempo em segundos antes que um comando expire. Zero indica uma expiração infinita."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Especifica o nome do objeto de banco de dados usado para abrir um conjunto de linhas."
                      name="OpenRowset">[audit].[log]</property>
                    <property
                      dataType="System.String"
                      description="Especifica a variável que contém o nome do objeto de banco de dados usado para abrir um conjunto de linhas."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="O comando SQL a ser executado."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Especifica a página de código de coluna a ser usada quando não há informações de página de código disponíveis a partir da fonte de dados."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forca o uso do valor da propriedade DefaultCodePage durante a descrição dos dados de caractere."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Especifica o modo usado para acessar o banco de dados."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indica se os valores fornecidos para colunas de identidade serão copiados no destino. Se false, os valores para colunas de identidade serão gerados automaticamente no destino. Aplicável apenas se o carregamento rápido estiver ativado."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indica se as colunas que contêm null terão null inserido no destino. Se false, as colunas que contêm null terão seus valores padrão inseridos no destino. Aplicável apenas se o carregamento rápido estiver ativado."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Especifica as opções a serem usadas com o carregamento rápido. Aplicável apenas se o carregamento rápido estiver ativado."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Especifica quando confirmações são emitidas durante a inserção de dados. Um valor de 0 especifica que uma confirmação será emitida ao final da inserção de dados. Aplicável somente se o carregamento rápido estiver ativado."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Connections[OleDbConnection]"
                      connectionManagerID="{A19D8945-CCF6-4326-A823-0DE3907DE37D}:external"
                      connectionManagerRefId="Project.ConnectionManagers[DB_Stage]"
                      description="A conexão de tempo de execução OLE DB usada para acessar o banco de dados."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Inputs[Entrada de Destino OLE DB]"
                      errorOrTruncationOperation="Inserir"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Entrada de Destino OLE DB">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Inputs[Entrada de Destino OLE DB].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="2008"
                          cachedName="Description"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Inputs[Entrada de Destino OLE DB].ExternalColumns[description]"
                          lineageId="Package\Looping in Sales files\Importing Goals\New columns.Outputs[Derived Column Output].Columns[Description]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Inputs[Entrada de Destino OLE DB].Columns[DateTime]"
                          cachedDataType="dbDate"
                          cachedName="DateTime"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Inputs[Entrada de Destino OLE DB].ExternalColumns[date_time]"
                          lineageId="Package\Looping in Sales files\Importing Goals\New columns.Outputs[Derived Column Output].Columns[DateTime]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Inputs[Entrada de Destino OLE DB].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Inputs[Entrada de Destino OLE DB].ExternalColumns[error_column]"
                          lineageId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Outputs[Saída de Erro de Destino OLE DB].Columns[ErrorColumn]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Inputs[Entrada de Destino OLE DB].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Inputs[Entrada de Destino OLE DB].ExternalColumns[error_code]"
                          lineageId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Outputs[Saída de Erro de Destino OLE DB].Columns[ErrorCode]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Inputs[Entrada de Destino OLE DB].ExternalColumns[Id]"
                          dataType="i4"
                          name="Id" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Inputs[Entrada de Destino OLE DB].ExternalColumns[error_code]"
                          dataType="i4"
                          name="error_code" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Inputs[Entrada de Destino OLE DB].ExternalColumns[error_column]"
                          dataType="i4"
                          name="error_column" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Inputs[Entrada de Destino OLE DB].ExternalColumns[date_time]"
                          dataType="dbTimeStamp"
                          name="date_time" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Inputs[Entrada de Destino OLE DB].ExternalColumns[description]"
                          dataType="wstr"
                          length="4000"
                          name="description" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Outputs[Saída de Erro de Destino OLE DB]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Saída de Erro de Destino OLE DB"
                      synchronousInputId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Inputs[Entrada de Destino OLE DB]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Outputs[Saída de Erro de Destino OLE DB].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Outputs[Saída de Erro de Destino OLE DB].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Outputs[Saída de Erro de Destino OLE DB].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Outputs[Saída de Erro de Destino OLE DB].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Looping in Sales files\Importing Goals\New columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="New columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Looping in Sales files\Importing Goals\New columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\New columns.Inputs[Derived Column Input].Columns[IDSeller]"
                          cachedDataType="r8"
                          cachedName="IDSeller"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[IDSeller]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\New columns.Inputs[Derived Column Input].Columns[ErrorDescription]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2000"
                          cachedName="ErrorDescription"
                          lineageId="Package\Looping in Sales files\Importing Goals\Script Component.Outputs[Output 0].Columns[ErrorDescription]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Looping in Sales files\Importing Goals\New columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Looping in Sales files\Importing Goals\New columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\New columns.Outputs[Derived Column Output].Columns[DateTime]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Looping in Sales files\Importing Goals\New columns.Outputs[Derived Column Output].Columns[DateTime]"
                          name="DateTime"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBDATE)[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBDATE)GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\New columns.Outputs[Derived Column Output].Columns[Description]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="2008"
                          lineageId="Package\Looping in Sales files\Importing Goals\New columns.Outputs[Derived Column Output].Columns[Description]"
                          name="Description"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,5)#{Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[IDSeller]} + " | " + #{Package\Looping in Sales files\Importing Goals\Script Component.Outputs[Output 0].Columns[ErrorDescription]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,5)IDSeller + " | " + ErrorDescription</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Looping in Sales files\Importing Goals\New columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Looping in Sales files\Importing Goals\New columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\New columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Goals\New columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\New columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Goals\New columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Looping in Sales files\Importing Goals\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.ErrorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_410356eec83648b0913111265637a355.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3c3bb528-ffab-4161-8776-f39eb68b390d}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_410356eec83648b0913111265637a355</RootNamespace>
    <AssemblyName>SC_410356eec83648b0913111265637a355</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_410356eec83648b0913111265637a355" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Double IDSeller
    {
        get
        {
            return Buffer.GetDouble(BufferColumnIndexes[0]);
        }
    }
    public bool IDSeller_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String SellerName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool SellerName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Decimal Goal2017
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[2]);
        }
    }
    public bool Goal2017_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Decimal Goal2018
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[3]);
        }
    }
    public bool Goal2018_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Decimal Goal2019
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[4]);
        }
    }
    public bool Goal2019_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Decimal Goal2020
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[5]);
        }
    }
    public bool Goal2020_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[6]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[7]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String ErrorColumnName
    {
        set
        {
            this[8] = value;
        }
    }
    public bool ErrorColumnName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[9] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_410356eec83648b0913111265637a355.Properties.Settings.get_Default():SC_410356eec83648b0913111265637a355.Properties.Sett" +
    "ings")]

namespace SC_410356eec83648b0913111265637a355.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_410356eec83648b0913111265637a355</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_410356eec83648b0913111265637a355</msb:DisplayName>
    <msb:ProjectId>{75AFC1DB-326D-4920-8CEB-71088DF88D77}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_410356eec83648b0913111265637a355.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_410356eec83648b0913111265637a355")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_410356eec83648b0913111265637a355")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_410356eec83648b0913111265637a355.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_410356eec83648b0913111265637a355.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_410356eec83648b0913111265637a355.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_410356eec83648b0913111265637a355.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_410356eec83648b0913111265637a355.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_410356eec83648b0913111265637a355.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMAlwGAAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAijYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADg2AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAkBYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABs
NgAAAAAAAEgAAAACAAUAqCIAANgSAAABAAAAAAAAAIA1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACipiAwIoEgAACgNvEgAABm8TAAAK
bxgAAAYqHgIoHAAABioqAgMEBSgUAAAKKlICexUAAAoCexYAAAoWlG8XAAAKKiICFigYAAAKKlIC
exUAAAoCexYAAAoXlG8ZAAAKKiICFygYAAAKKlICexUAAAoCexYAAAoYlG8aAAAKKiICGCgYAAAK
KlICexUAAAoCexYAAAoZlG8aAAAKKiICGSgYAAAKKlICexUAAAoCexYAAAoalG8aAAAKKiICGigY
AAAKKlICexUAAAoCexYAAAoblG8aAAAKKiICGygYAAAKKlICexUAAAoCexYAAAoclG8bAAAKKiIC
HCgYAAAKKlICexUAAAoCexYAAAodlG8bAAAKKiICHSgYAAAKKiYCHgMoHAAACipaAywIAh4oHQAA
CipyAQAAcHMeAAAKeioCHwkDKBwAAAoqXgMsCQIfCSgdAAAKKnIBAABwcx4AAAp6HgIoHwAACioe
AiggAAAKKn4CKCEAAAoCAnMgAAAGfQEAAAQCAnMhAAAGfQIAAAQqkgRyngAAcBpvIgAACiwVAgUC
AygjAAAKDgRzBQAABm8eAAAGKkorBwIDbx8AAAYDbxoAAAYt8SoGKjoCKCQAAAoCA30DAAAEKjoC
KCQAAAoCA30EAAAEKh4CKCQAAAoqrn4FAAAELR5yrgAAcNAHAAACKCUAAApvJgAACnMnAAAKgAUA
AAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqHgIoKAAACioucycAAAaABwAABCoAAEJTSkIB
AAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAFAHAAAjfgAAvAcAABgIAAAjU3RyaW5ncwAA
AADUDwAAIAEAACNVUwD0EAAAEAAAACNHVUlEAAAABBEAANQBAAAjQmxvYgAAAAAAAAACAAABVxWg
AQkBAAAA+gEzABYAAAEAAAAhAAAACAAAAAcAAAAoAAAAEQAAACgAAAAQAAAAAwAAABcAAAAYAAAA
AQAAAAUAAAABAAAAAACfAwEAAAAAAAYAiwJOBgYAHwNOBgYA1wE7Bg8AwgYAAAYABAINBQYAbgIN
BQYATwINBQYABgMNBQYAqwINBQYAxAINBQYAGwINBQYANgJaAwoA3wIkAQoA1wUkAQ4AyAUkAQoA
fwUkAQYAgQO1BAoAiAckAQYASwe1BAYAugE7BgYA6AVuBgYAcwX4BBIAigGJAxIA6wGJAxIAcgHj
BAYAnwFOBhYAAQAFBgYAHwW1BAYAdwO1BAYAYgW1BAYARQG1BAYA0wC1BAYADQgNBQAAAAB7AAAA
AAABAAEAAQAQAMgEAAAQAAEAAQABABAAuwUAADkAAQAFAAEAEABqBwAASQABABwAAQAQAD8HAABN
AAMAIAABABAAAAcAAE0ABAAhAAAAEAB1BtEGTQAFACIAAAEQAC8H0QZlAAcAJgAGAD8HiwAGAAAH
jwABAHgHkwABAHgHkwARALwElwARAGIBmwARAKsAnwBQIAAAAADGAD0DBgABAFggAAAAAMYASAMG
AAEAYCAAAAAAxgDqB6MAAQB5IAAAAACGGC4GBgACAIEgAAAAAIYYLgYlAAIAjCAAAAAAhgj4BakA
BQChIAAAAACGCJAEUgAFAKogAAAAAIYICwGtAAUAvyAAAAAAhghHBFIABQDIIAAAAACGCFQAsQAF
AN0gAAAAAIYI2wNSAAUA5iAAAAAAhghhALEABQD7IAAAAACGCO8DUgAFAAQhAAAAAIYIbgCxAAUA
GSEAAAAAhggDBFIABQAiIQAAAACGCBoAsQAFADchAAAAAIYIxwNSAAUAQCEAAAAAhgi7ALYABQBV
IQAAAACGCBcEUgAFAF4hAAAAAIYI0wS2AAUAcyEAAAAAhghdBFIABQB8IQAAAACGCPcAEAAFAIYh
AAAAAIYILAS6AAYAnSEAAAAAhgg5BRAABwCoIQAAAACGCHQEugAIAMAhAAAAAIYAAQhSAAkAyCEA
AAAAhgBSB1IACQDQIQAAAACGGC4GBgAJAPAhAAAAAMYA3Qe/AAkAFSIAAAAAxgHWB6MADQAoIgAA
AADGAeoHowAOACoiAAAAAIYYLgbJAA8AOSIAAAAAhhguBskAEABIIgAAAACDGC4GBgARAFAiAAAA
AJMI5AXPABEAfCIAAAAAkwhKAdQAEQCDIgAAAACTCFYB2QARAIsiAAAAAJYIXgffABIAkiIAAAAA
hhguBgYAEgCaIgAAAACRGDQG5AASAAAAAQAFCAAAAQDdBQAAAgAKBwAAAwCNBQAAAQBUAwAAAQBU
AwAAAQBUAwAAAQBUAwAAAQCEAAAAAgAaAQAAAwDdBQAABACNBQAAAQDdBQAAAQAFCAAAAQCOBwAA
AQCOBwAAAQBUAwkALgYBABEALgYGABkALgYKACkALgYQADEALgYQADkALgYQAEEALgYQAEkALgYQ
AFEALgYQAFkALgYQAGEALgYQAGkALgYGAKEALgYGAMEALgYVANEALgYGAJEAPQMGAJEASAMGAJEA
jAAbANkATgUgAHEALgYlAHEA3QUvAHEACgczAHkAyQA3AHEAnQQ8AHkAdAMgAHkAfgNBAHkAJwBH
AHEArARMAHEApAQBAOEALgYQAHEAAQhSAHEAUgdSAJEALgYGAOkAOAdWAJEAHgddAJkALgYGAPkA
5QBjAPkACQhrAKkALgZxAMkALgYGAC4ACwAMAS4AEwAVAS4AGwA0AS4AIwA9AS4AKwBmAS4AMwBm
AS4AOwBmAS4AQwA9AS4ASwBsAS4AUwBmAS4AWwCDAUMAYwDNAeEAewDNAeMAawDNAakCcwA0AckC
cwA0AQMAAQAHABUACAAXAAAA/AXoAAAAlATsAAAADwHwAAAASwTsAAAAWAD0AAAA3wPsAAAAZQD0
AAAA8wPsAAAAcgD0AAAABwTsAAAAHgD0AAAAywPsAAAAvwD5AAAAGwTsAAAA1wT5AAAAYQTsAAAA
+wDwAAAAMATsAAAAUQXwAAAAeATsAAAA6AX9AAAAagECAQAAYgcHAQIABgADAAIABwAFAAIACAAH
AAIACQAJAAIACgALAAIACwANAAIADAAPAAIADQARAAIADgATAAIADwAVAAIAEAAXAAIAEQAZAAIA
EgAbAAIAEwAdAAIAFAAfAAIAFQAhAAEAFgAjAAEAFwAlAAEAGAAnAAEAGQApAAIAIwArAAIAJAAt
AAEAJQAtAAIAJgAvAASAAAABAAAAAAAAAAAAAAAAADAAAAAEAAAAAAAAAAAAAAB5AKIAAAAAAA8A
AAAAAAAAAAAAAIIAmAcAAAAADwAAAAAAAAAAAAAAggC1BwAAAAAEAAAAAAAAAAAAAAB5ALUEAAAA
AA8AAAAAAAAAAAAAAIIAlwUAAAAAAAAAAAEAAAB/BgAAAAAAAABJRFRTQ29tcG9uZW50TWV0YURh
dGExMDAAZ2V0X0dvYWwyMDIwAEdldEludDMyAFNDXzQxMDM1NmVlYzgzNjQ4YjA5MTMxMTEyNjU2
MzdhMzU1AGdldF9Hb2FsMjAxNwBnZXRfR29hbDIwMTgAZ2V0X0dvYWwyMDE5ADxNb2R1bGU+AElu
cHV0SUQAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBnZXRf
RXJyb3JDb2RlAEdldERvdWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBz
ZXRfRXJyb3JDb2x1bW5OYW1lAGdldF9TZWxsZXJOYW1lAElucHV0TmFtZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21w
aWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVn
Z2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRy
aWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRl
AEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmli
dXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmli
dXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAR2V0U3RyaW5nAEdldERlY2ltYWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzQx
MDM1NmVlYzgzNjQ4YjA5MTMxMTEyNjU2MzdhMzU1LmRsbABnZXRfR29hbDIwMjBfSXNOdWxsAGdl
dF9Hb2FsMjAxN19Jc051bGwAZ2V0X0dvYWwyMDE4X0lzTnVsbABnZXRfR29hbDIwMTlfSXNOdWxs
AGdldF9FcnJvckNvZGVfSXNOdWxsAHNldF9FcnJvckNvbHVtbk5hbWVfSXNOdWxsAGdldF9TZWxs
ZXJOYW1lX0lzTnVsbABnZXRfRXJyb3JDb2x1bW5fSXNOdWxsAHNldF9FcnJvckRlc2NyaXB0aW9u
X0lzTnVsbABnZXRfSURTZWxsZXJfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291
cmNlTWFuAFNjcmlwdE1haW4AZ2V0X0Vycm9yQ29sdW1uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5
c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNl
cHRpb24Ac2V0X0Vycm9yRGVzY3JpcHRpb24AR2V0RXJyb3JEZXNjcmlwdGlvbgBTdHJpbmdDb21w
YXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRC
dWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfSURTZWxsZXIATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5
c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ180MTAzNTZl
ZWM4MzY0OGIwOTEzMTExMjY1NjM3YTM1NS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
RGVidWdnaW5nTW9kZXMAU0NfNDEwMzU2ZWVjODM2NDhiMDkxMzExMTI2NTYzN2EzNTUuUHJvcGVy
dGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRp
bmdzAEVxdWFscwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNl
ckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1By
b2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AAAA
AICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMA
ZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0
AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAA
MAAAcVMAQwBfADQAMQAwADMANQA2AGUAZQBjADgAMwA2ADQAOABiADAAOQAxADMAMQAxADEAMgA2
ADUANgAzADcAYQAzADUANQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUA
cwAAFji+FzxUB0urCyaPA4y2rQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXQQgABJtBCABDggJ
IAMBEj0dCBJBAwYSPQMGHQgEIAENCAQgAQIIBSABEUUIBCABCAgFIAIBCBwDIAACBiACAg4ReQUg
AR0ICAcAARJ9EYCBBSAAEoCFByACAQ4SgIUIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkkD
BhJVAwYSWQMGEiAFIAEBEgwDIAANAyAADgQgABFFAyAACAQgAQECCSAEAQgOEj0SQQUgAQESSQQA
ABJVBAAAElkFAAEBElkEAAASIAMAAAEDKAANAygAAgMoAA4EKAARRQMoAAgECAASVQQIABJZBAgA
EiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1ND
XzQxMDM1NmVlYzgzNjQ4YjA5MTMxMTEyNjU2MzdhMzU1AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAg
IDIwMjEAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABgNgAAAAAAAAAAAAB6
NgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbDYAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8ANAAxADAAMwA1ADYAZQBlAGMAOAAzADYANAA4AGIAMAA5ADEAMwAxADEAMQAyADYANQA2
ADMANwBhADMANQA1AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA0ADEAMAAzADUANgBl
AGUAYwA4ADMANgA0ADgAYgAwADkAMQAzADEAMQAxADIANgA1ADYAMwA3AGEAMwA1ADUALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAA
AAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADQAMQAw
ADMANQA2AGUAZQBjADgAMwA2ADQAOABiADAAOQAxADMAMQAxADEAMgA2ADUANgAzADcAYQAzADUA
NQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA0ADEAMAAz
ADUANgBlAGUAYwA4ADMANgA0ADgAYgAwADkAMQAzADEAMQAxADIANgA1ADYAMwA3AGEAMwA1ADUA
AAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAI
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIw2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_410356eec83648b0913111265637a355</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">5C</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Looping in Sales files\Importing Goals\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Script Component.Inputs[Input 0].Columns[IDSeller]"
                          cachedDataType="r8"
                          cachedName="IDSeller"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[IDSeller]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Script Component.Inputs[Input 0].Columns[SellerName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="SellerName"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[SellerName]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Script Component.Inputs[Input 0].Columns[Goal2017]"
                          cachedDataType="cy"
                          cachedName="Goal2017"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[Goal2017]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Script Component.Inputs[Input 0].Columns[Goal2018]"
                          cachedDataType="cy"
                          cachedName="Goal2018"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[Goal2018]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Script Component.Inputs[Input 0].Columns[Goal2019]"
                          cachedDataType="cy"
                          cachedName="Goal2019"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[Goal2019]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Script Component.Inputs[Input 0].Columns[Goal2020]"
                          cachedDataType="cy"
                          cachedName="Goal2020"
                          lineageId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel].Columns[Goal2020]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Script Component.Inputs[Input 0].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Outputs[Saída de Erro de Destino OLE DB].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Script Component.Inputs[Input 0].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Outputs[Saída de Erro de Destino OLE DB].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Looping in Sales files\Importing Goals\Script Component.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Looping in Sales files\Importing Goals\Script Component.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Script Component.Outputs[Output 0].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Looping in Sales files\Importing Goals\Script Component.Outputs[Output 0].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Goals\Script Component.Outputs[Output 0].Columns[ErrorDescription]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Looping in Sales files\Importing Goals\Script Component.Outputs[Output 0].Columns[ErrorDescription]"
                          name="ErrorDescription" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Looping in Sales files\Importing Goals.Paths[Derived Column Output]"
                  endId="Package\Looping in Sales files\Importing Goals\Logging audit_log.Inputs[Entrada de Destino OLE DB]"
                  name="Derived Column Output"
                  startId="Package\Looping in Sales files\Importing Goals\New columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Looping in Sales files\Importing Goals.Paths[Output 0]"
                  endId="Package\Looping in Sales files\Importing Goals\New columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Looping in Sales files\Importing Goals\Script Component.Outputs[Output 0]" />
                <path
                  refId="Package\Looping in Sales files\Importing Goals.Paths[Saída de Erro de Destino OLE DB]"
                  endId="Package\Looping in Sales files\Importing Goals\Script Component.Inputs[Input 0]"
                  name="Saída de Erro de Destino OLE DB"
                  startId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Outputs[Saída de Erro de Destino OLE DB]" />
                <path
                  refId="Package\Looping in Sales files\Importing Goals.Paths[Saída de Origem do Excel]"
                  endId="Package\Looping in Sales files\Importing Goals\Destino OLE DB.Inputs[Entrada de Destino OLE DB]"
                  name="Saída de Origem do Excel"
                  startId="Package\Looping in Sales files\Importing Goals\Goals.Outputs[Saída de Origem do Excel]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Looping in Sales files\Importing Sales"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{98189B1F-57BD-48A8-9D5B-269138754B82}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="1046"
          DTS:ObjectName="Importing Sales"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Looping in Sales files\Importing Sales\add ID Manager"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="add ID Manager"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Looping in Sales files\Importing Sales\add ID Manager.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\add ID Manager.Inputs[Derived Column Input].Columns[ManagerName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ManagerName"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[ManagerName]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\add ID Manager.Inputs[Derived Column Input].Columns[SaleDate]"
                          cachedDataType="date"
                          cachedName="SaleDate"
                          errorOrTruncationOperation="Computação"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SaleDate]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Expressão de Coluna Derivada"
                              name="Expression">(DT_DATE)#{Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SaleDate]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Expressão Amigável de Coluna Derivada"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DATE)SaleDate</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\add ID Manager.Inputs[Derived Column Input].Columns[ExpirationDate]"
                          cachedDataType="date"
                          cachedName="ExpirationDate"
                          errorOrTruncationOperation="Computação"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[ExpirationDate]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Expressão de Coluna Derivada"
                              name="Expression">(DT_DATE)#{Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[ExpirationDate]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Expressão Amigável de Coluna Derivada"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DATE)ExpirationDate</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\add ID Manager.Inputs[Derived Column Input].Columns[PaymentDate]"
                          cachedDataType="date"
                          cachedName="PaymentDate"
                          errorOrTruncationOperation="Computação"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[PaymentDate]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Expressão de Coluna Derivada"
                              name="Expression">(DT_DATE)#{Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[PaymentDate]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Expressão Amigável de Coluna Derivada"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DATE)PaymentDate</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Looping in Sales files\Importing Sales\add ID Manager.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Looping in Sales files\Importing Sales\add ID Manager.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\add ID Manager.Outputs[Derived Column Output].Columns[id_manager]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Looping in Sales files\Importing Sales\add ID Manager.Outputs[Derived Column Output].Columns[id_manager]"
                          name="id_manager"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[SUBSTRING](#{Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[ManagerName]},9,1)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">SUBSTRING(ManagerName,9,1)</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Looping in Sales files\Importing Sales\add ID Manager.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Looping in Sales files\Importing Sales\add ID Manager.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\add ID Manager.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Sales\add ID Manager.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\add ID Manager.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Sales\add ID Manager.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Looping in Sales files\Importing Sales\do Logging"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="do Logging"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[audit].[log]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Looping in Sales files\Importing Sales\do Logging.Connections[OleDbConnection]"
                      connectionManagerID="{A19D8945-CCF6-4326-A823-0DE3907DE37D}:external"
                      connectionManagerRefId="Project.ConnectionManagers[DB_Stage]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Looping in Sales files\Importing Sales\do Logging.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\do Logging.Inputs[OLE DB Destination Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="3759"
                          cachedName="Description"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\do Logging.Inputs[OLE DB Destination Input].ExternalColumns[description]"
                          lineageId="Package\Looping in Sales files\Importing Sales\New columns.Outputs[Derived Column Output].Columns[Description]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\do Logging.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\do Logging.Inputs[OLE DB Destination Input].ExternalColumns[error_code]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\do Logging.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\do Logging.Inputs[OLE DB Destination Input].ExternalColumns[error_column]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\do Logging.Inputs[OLE DB Destination Input].Columns[DateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="DateTime"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\do Logging.Inputs[OLE DB Destination Input].ExternalColumns[date_time]"
                          lineageId="Package\Looping in Sales files\Importing Sales\New columns.Outputs[Derived Column Output].Columns[DateTime]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\do Logging.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                          dataType="i4"
                          name="Id" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\do Logging.Inputs[OLE DB Destination Input].ExternalColumns[error_code]"
                          dataType="i4"
                          name="error_code" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\do Logging.Inputs[OLE DB Destination Input].ExternalColumns[error_column]"
                          dataType="i4"
                          name="error_column" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\do Logging.Inputs[OLE DB Destination Input].ExternalColumns[date_time]"
                          dataType="dbTimeStamp"
                          name="date_time" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\do Logging.Inputs[OLE DB Destination Input].ExternalColumns[description]"
                          dataType="wstr"
                          length="4000"
                          name="description" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Looping in Sales files\Importing Sales\do Logging.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Looping in Sales files\Importing Sales\do Logging.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\do Logging.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Sales\do Logging.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\do Logging.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Sales\do Logging.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert staging_sales"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[sales].[RAW_Sales]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">65001</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Connections[OleDbConnection]"
                      connectionManagerID="{A19D8945-CCF6-4326-A823-0DE3907DE37D}:external"
                      connectionManagerRefId="Project.ConnectionManagers[DB_Stage]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[SaleDate]"
                          cachedDataType="date"
                          cachedName="SaleDate"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[SaleDate]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SaleDate]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[ExpirationDate]"
                          cachedDataType="date"
                          cachedName="ExpirationDate"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[ExpirationDate]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[ExpirationDate]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[OrderNumber]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="OrderNumber"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[OrderNumber]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[OrderNumber]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[IDSeller]"
                          cachedDataType="r8"
                          cachedName="IDSeller"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[IDSeller]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDSeller]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[SellerName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="SellerName"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[SellerName]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SellerName]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[ManagerName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ManagerName"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[ManagerName]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[ManagerName]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[IDBranch]"
                          cachedDataType="r8"
                          cachedName="IDBranch"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[IDBranch]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDBranch]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[BranchName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="BranchName"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[BranchName]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[BranchName]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[BranchCityName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="BranchCityName"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[BranchCityName]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[BranchCityName]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[IDProduct]"
                          cachedDataType="r8"
                          cachedName="IDProduct"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[IDProduct]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDProduct]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[ProductName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ProductName"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[ProductName]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[ProductName]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[IDCategory]"
                          cachedDataType="r8"
                          cachedName="IDCategory"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[IDCategory]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDCategory]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[CategoryName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CategoryName"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[CategoryName]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CategoryName]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[IDSubcategory]"
                          cachedDataType="r8"
                          cachedName="IDSubcategory"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[IDSubcategory]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDSubcategory]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[SubcategoryName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="SubcategoryName"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[SubcategoryName]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SubcategoryName]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[CostPrice]"
                          cachedDataType="cy"
                          cachedName="CostPrice"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[CostPrice]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CostPrice]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[SellPrice]"
                          cachedDataType="cy"
                          cachedName="SellPrice"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[SellPrice]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SellPrice]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[Margin]"
                          cachedDataType="cy"
                          cachedName="Margin"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[Margin]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[Margin]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[MarginPercet]"
                          cachedDataType="r8"
                          cachedName="MarginPercet"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[MarginPercet]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[MarginPercet]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[IDCustomer]"
                          cachedDataType="r8"
                          cachedName="IDCustomer"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[IDCustomer]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDCustomer]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[CustomerName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CustomerName"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[CustomerName]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CustomerName]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[CustomerCityName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CustomerCityName"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCityName]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CustomerCityName]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[CustomerCountry]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CustomerCountry"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCountry]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CustomerCountry]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[CustomerCityPopulation]"
                          cachedDataType="r8"
                          cachedName="CustomerCityPopulation"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCityPopulation]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CustomerCityPopulation]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[UnitPrice]"
                          cachedDataType="cy"
                          cachedName="UnitPrice"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[UnitPrice]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[UnitPrice]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[Quantity]"
                          cachedDataType="r8"
                          cachedName="Quantity"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[Quantity]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[Quantity]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[SellTotal]"
                          cachedDataType="cy"
                          cachedName="SellTotal"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[SellTotal]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SellTotal]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[Discount]"
                          cachedDataType="cy"
                          cachedName="Discount"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[Discount]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[Discount]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[DiscountPercent]"
                          cachedDataType="r8"
                          cachedName="DiscountPercent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[DiscountPercent]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[DiscountPercent]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[Payment]"
                          cachedDataType="cy"
                          cachedName="Payment"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[Payment]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[Payment]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[PaymentDate]"
                          cachedDataType="date"
                          cachedName="PaymentDate"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[PaymentDate]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[PaymentDate]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[BranchCountry]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="BranchCountry"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[BranchCountry]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[BranchCountry]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[BranchPopulation]"
                          cachedDataType="r8"
                          cachedName="BranchPopulation"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[BranchPopulation]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[BranchPopulation]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].Columns[id_manager]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="id_manager"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[IDManager]"
                          lineageId="Package\Looping in Sales files\Importing Sales\add ID Manager.Outputs[Derived Column Output].Columns[id_manager]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[IDSeller]"
                          dataType="i4"
                          name="IDSeller" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[SellerName]"
                          dataType="wstr"
                          length="255"
                          name="SellerName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[SaleDate]"
                          dataType="wstr"
                          length="10"
                          name="SaleDate" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[ExpirationDate]"
                          dataType="wstr"
                          length="10"
                          name="ExpirationDate" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[OrderNumber]"
                          dataType="wstr"
                          length="255"
                          name="OrderNumber" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[ManagerName]"
                          dataType="wstr"
                          length="255"
                          name="ManagerName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[IDBranch]"
                          dataType="i4"
                          name="IDBranch" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[BranchName]"
                          dataType="wstr"
                          length="255"
                          name="BranchName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[BranchCityCode]"
                          dataType="i4"
                          name="BranchCityCode" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[BranchCityName]"
                          dataType="wstr"
                          length="255"
                          name="BranchCityName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[BranchCountry]"
                          dataType="wstr"
                          length="255"
                          name="BranchCountry" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[BranchPopulation]"
                          dataType="i4"
                          name="BranchPopulation" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[IDProduct]"
                          dataType="i4"
                          name="IDProduct" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[ProductName]"
                          dataType="wstr"
                          length="255"
                          name="ProductName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[IDCategory]"
                          dataType="i4"
                          name="IDCategory" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[CategoryName]"
                          dataType="wstr"
                          length="255"
                          name="CategoryName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[IDSubcategory]"
                          dataType="i4"
                          name="IDSubcategory" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[SubcategoryName]"
                          dataType="wstr"
                          length="255"
                          name="SubcategoryName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[CostPrice]"
                          dataType="cy"
                          name="CostPrice" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[SellPrice]"
                          dataType="cy"
                          name="SellPrice" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[Margin]"
                          dataType="cy"
                          name="Margin" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[MarginPercet]"
                          dataType="numeric"
                          name="MarginPercet"
                          precision="18"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[IDCustomer]"
                          dataType="i4"
                          name="IDCustomer" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[CustomerName]"
                          dataType="wstr"
                          length="255"
                          name="CustomerName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCityCode]"
                          dataType="i4"
                          name="CustomerCityCode" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCityName]"
                          dataType="wstr"
                          length="255"
                          name="CustomerCityName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCountry]"
                          dataType="wstr"
                          length="255"
                          name="CustomerCountry" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[CustomerCityPopulation]"
                          dataType="i4"
                          name="CustomerCityPopulation" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[UnitPrice]"
                          dataType="cy"
                          name="UnitPrice" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[Quantity]"
                          dataType="numeric"
                          name="Quantity"
                          precision="18"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[SellTotal]"
                          dataType="cy"
                          name="SellTotal" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[Discount]"
                          dataType="cy"
                          name="Discount" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[DiscountPercent]"
                          dataType="numeric"
                          name="DiscountPercent"
                          precision="18"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[Payment]"
                          dataType="cy"
                          name="Payment" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[PaymentDate]"
                          dataType="wstr"
                          length="10"
                          name="PaymentDate" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input].ExternalColumns[IDManager]"
                          dataType="i4"
                          name="IDManager" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Looping in Sales files\Importing Sales\New columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="New columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Looping in Sales files\Importing Sales\New columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\New columns.Inputs[Derived Column Input].Columns[OrderNumber]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="OrderNumber"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[OrderNumber]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\New columns.Inputs[Derived Column Input].Columns[ErrorDescription]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2000"
                          cachedName="ErrorDescription"
                          lineageId="Package\Looping in Sales files\Importing Sales\Script Component.Outputs[Output 0].Columns[ErrorDescription]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\New columns.Inputs[Derived Column Input].Columns[ErrorColumnName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2000"
                          cachedName="ErrorColumnName"
                          lineageId="Package\Looping in Sales files\Importing Sales\Script Component.Outputs[Output 0].Columns[ErrorColumnName]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Looping in Sales files\Importing Sales\New columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Looping in Sales files\Importing Sales\New columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\New columns.Outputs[Derived Column Output].Columns[DateTime]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Looping in Sales files\Importing Sales\New columns.Outputs[Derived Column Output].Columns[DateTime]"
                          name="DateTime"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBTIMESTAMP)[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBTIMESTAMP)GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\New columns.Outputs[Derived Column Output].Columns[Description]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3759"
                          lineageId="Package\Looping in Sales files\Importing Sales\New columns.Outputs[Derived Column Output].Columns[Description]"
                          name="Description"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[OrderNumber]} + " |" + #{Package\Looping in Sales files\Importing Sales\Script Component.Outputs[Output 0].Columns[ErrorDescription]} + " |" + [LEFT](#{Package\Looping in Sales files\Importing Sales\Script Component.Outputs[Output 0].Columns[ErrorColumnName]},1500)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">OrderNumber + " |" + ErrorDescription + " |" + LEFT(ErrorColumnName,1500)</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Looping in Sales files\Importing Sales\New columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Looping in Sales files\Importing Sales\New columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\New columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Sales\New columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\New columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Sales\New columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Looping in Sales files\Importing Sales\Sales"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Sales"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Vendas$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT 
SaleDate, 
ExpirationDate, 
OrderNumber, 
IDSeller, 
SellerName, 
ManagerName, 
IDBranch, 
BranchName, 
BranchCityName, 
BranchCountry, 
BranchPopulation, 
IDProduct, 
ProductName, 
IDCategory, 
CategoryName, 
IDSubcategory, 
SubcategoryName, 
CostPrice, 
SellPrice, 
Margin, 
MarginPercet, 
IDCustomer, 
CustomerName, 
CustomerCountry, 
CustomerCityName, 
CustomerCityPopulation, 
UnitPrice, 
Quantity, 
SellTotal, 
Discount, 
DiscountPercent, 
Payment, 
PaymentDate
FROM     [Sales$]</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">$Project::Vendas_Excel_ConnectionString</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Looping in Sales files\Importing Sales\Sales.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Sales.xlsx]"
                      connectionManagerRefId="Package.ConnectionManagers[Sales.xlsx]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SaleDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[SaleDate]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SaleDate]"
                          name="SaleDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[ExpirationDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[ExpirationDate]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[ExpirationDate]"
                          name="ExpirationDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[OrderNumber]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[OrderNumber]"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[OrderNumber]"
                          name="OrderNumber"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDSeller]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[IDSeller]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDSeller]"
                          name="IDSeller"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SellerName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[SellerName]"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SellerName]"
                          name="SellerName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[ManagerName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[ManagerName]"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[ManagerName]"
                          name="ManagerName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDBranch]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[IDBranch]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDBranch]"
                          name="IDBranch"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[BranchName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[BranchName]"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[BranchName]"
                          name="BranchName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[BranchCityName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[BranchCityName]"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[BranchCityName]"
                          name="BranchCityName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDProduct]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[IDProduct]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDProduct]"
                          name="IDProduct"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[ProductName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[ProductName]"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[ProductName]"
                          name="ProductName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDCategory]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[IDCategory]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDCategory]"
                          name="IDCategory"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CategoryName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[CategoryName]"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CategoryName]"
                          name="CategoryName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDSubcategory]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[IDSubcategory]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDSubcategory]"
                          name="IDSubcategory"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SubcategoryName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[SubcategoryName]"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SubcategoryName]"
                          name="SubcategoryName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CostPrice]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[CostPrice]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CostPrice]"
                          name="CostPrice"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SellPrice]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[SellPrice]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SellPrice]"
                          name="SellPrice"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[Margin]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[Margin]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[Margin]"
                          name="Margin"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[MarginPercet]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[MarginPercet]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[MarginPercet]"
                          name="MarginPercet"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDCustomer]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[IDCustomer]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDCustomer]"
                          name="IDCustomer"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CustomerName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[CustomerName]"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CustomerName]"
                          name="CustomerName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CustomerCityName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[CustomerCityName]"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CustomerCityName]"
                          name="CustomerCityName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CustomerCountry]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[CustomerCountry]"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CustomerCountry]"
                          name="CustomerCountry"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CustomerCityPopulation]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[CustomerCityPopulation]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[CustomerCityPopulation]"
                          name="CustomerCityPopulation"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[UnitPrice]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[UnitPrice]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[UnitPrice]"
                          name="UnitPrice"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[Quantity]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[Quantity]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[Quantity]"
                          name="Quantity"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SellTotal]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[SellTotal]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SellTotal]"
                          name="SellTotal"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[Discount]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[Discount]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[Discount]"
                          name="Discount"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[DiscountPercent]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[DiscountPercent]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[DiscountPercent]"
                          name="DiscountPercent"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[Payment]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[Payment]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[Payment]"
                          name="Payment"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[PaymentDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[PaymentDate]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[PaymentDate]"
                          name="PaymentDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[BranchCountry]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[BranchCountry]"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[BranchCountry]"
                          name="BranchCountry"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[BranchPopulation]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversão"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[BranchPopulation]"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[BranchPopulation]"
                          name="BranchPopulation"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[SaleDate]"
                          dataType="date"
                          name="SaleDate" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[ExpirationDate]"
                          dataType="date"
                          name="ExpirationDate" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[OrderNumber]"
                          dataType="wstr"
                          length="255"
                          name="OrderNumber" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[IDSeller]"
                          dataType="r8"
                          name="IDSeller" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[SellerName]"
                          dataType="wstr"
                          length="255"
                          name="SellerName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[ManagerName]"
                          dataType="wstr"
                          length="255"
                          name="ManagerName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[IDBranch]"
                          dataType="r8"
                          name="IDBranch" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[BranchName]"
                          dataType="wstr"
                          length="255"
                          name="BranchName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[BranchCityName]"
                          dataType="wstr"
                          length="255"
                          name="BranchCityName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[IDProduct]"
                          dataType="r8"
                          name="IDProduct" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[ProductName]"
                          dataType="wstr"
                          length="255"
                          name="ProductName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[IDCategory]"
                          dataType="r8"
                          name="IDCategory" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[CategoryName]"
                          dataType="wstr"
                          length="255"
                          name="CategoryName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[IDSubcategory]"
                          dataType="r8"
                          name="IDSubcategory" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[SubcategoryName]"
                          dataType="wstr"
                          length="255"
                          name="SubcategoryName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[CostPrice]"
                          dataType="cy"
                          name="CostPrice" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[SellPrice]"
                          dataType="cy"
                          name="SellPrice" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[Margin]"
                          dataType="cy"
                          name="Margin" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[MarginPercet]"
                          dataType="r8"
                          name="MarginPercet" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[IDCustomer]"
                          dataType="r8"
                          name="IDCustomer" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[CustomerName]"
                          dataType="wstr"
                          length="255"
                          name="CustomerName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[CustomerCityName]"
                          dataType="wstr"
                          length="255"
                          name="CustomerCityName" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[CustomerCountry]"
                          dataType="wstr"
                          length="255"
                          name="CustomerCountry" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[CustomerCityPopulation]"
                          dataType="r8"
                          name="CustomerCityPopulation" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[UnitPrice]"
                          dataType="cy"
                          name="UnitPrice" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[Quantity]"
                          dataType="r8"
                          name="Quantity" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[SellTotal]"
                          dataType="cy"
                          name="SellTotal" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[Discount]"
                          dataType="cy"
                          name="Discount" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[DiscountPercent]"
                          dataType="r8"
                          name="DiscountPercent" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[Payment]"
                          dataType="cy"
                          name="Payment" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[PaymentDate]"
                          dataType="date"
                          name="PaymentDate" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[BranchCountry]"
                          dataType="wstr"
                          length="255"
                          name="BranchCountry" />
                        <externalMetadataColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].ExternalColumns[BranchPopulation]"
                          dataType="r8"
                          name="BranchPopulation" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[SaleDate]"
                          dataType="date"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[SaleDate]"
                          name="SaleDate" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[ExpirationDate]"
                          dataType="date"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[ExpirationDate]"
                          name="ExpirationDate" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[OrderNumber]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[OrderNumber]"
                          name="OrderNumber" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[IDSeller]"
                          dataType="r8"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[IDSeller]"
                          name="IDSeller" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[SellerName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[SellerName]"
                          name="SellerName" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[ManagerName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[ManagerName]"
                          name="ManagerName" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[IDBranch]"
                          dataType="r8"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[IDBranch]"
                          name="IDBranch" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[BranchName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[BranchName]"
                          name="BranchName" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[BranchCityName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[BranchCityName]"
                          name="BranchCityName" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[BranchCountry]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[BranchCountry]"
                          name="BranchCountry" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[BranchPopulation]"
                          dataType="r8"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[BranchPopulation]"
                          name="BranchPopulation" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[IDProduct]"
                          dataType="r8"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[IDProduct]"
                          name="IDProduct" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[ProductName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[ProductName]"
                          name="ProductName" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[IDCategory]"
                          dataType="r8"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[IDCategory]"
                          name="IDCategory" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[CategoryName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[CategoryName]"
                          name="CategoryName" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[IDSubcategory]"
                          dataType="r8"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[IDSubcategory]"
                          name="IDSubcategory" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[SubcategoryName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[SubcategoryName]"
                          name="SubcategoryName" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[CostPrice]"
                          dataType="cy"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[CostPrice]"
                          name="CostPrice" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[SellPrice]"
                          dataType="cy"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[SellPrice]"
                          name="SellPrice" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[Margin]"
                          dataType="cy"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[Margin]"
                          name="Margin" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[MarginPercet]"
                          dataType="r8"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[MarginPercet]"
                          name="MarginPercet" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[IDCustomer]"
                          dataType="r8"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[IDCustomer]"
                          name="IDCustomer" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[CustomerName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[CustomerName]"
                          name="CustomerName" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[CustomerCityName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[CustomerCityName]"
                          name="CustomerCityName" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[CustomerCountry]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[CustomerCountry]"
                          name="CustomerCountry" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[CustomerCityPopulation]"
                          dataType="r8"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[CustomerCityPopulation]"
                          name="CustomerCityPopulation" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[UnitPrice]"
                          dataType="cy"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[UnitPrice]"
                          name="UnitPrice" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[Quantity]"
                          dataType="r8"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[Quantity]"
                          name="Quantity" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[SellTotal]"
                          dataType="cy"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[SellTotal]"
                          name="SellTotal" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[Discount]"
                          dataType="cy"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[Discount]"
                          name="Discount" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[DiscountPercent]"
                          dataType="r8"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[DiscountPercent]"
                          name="DiscountPercent" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[Payment]"
                          dataType="cy"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[Payment]"
                          name="Payment" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[PaymentDate]"
                          dataType="date"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[PaymentDate]"
                          name="PaymentDate" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Looping in Sales files\Importing Sales\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.ErrorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);
        IDTSComponentMetaData130 componentMetaData = this.ComponentMetaData as IDTSComponentMetaData130;
        Row.ErrorColumnName = componentMetaData.GetIdentificationStringByID(Row.ErrorColumn);
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_410356eec83648b0913111265637a355.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3c3bb528-ffab-4161-8776-f39eb68b390d}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_410356eec83648b0913111265637a355</RootNamespace>
    <AssemblyName>SC_959EB7DCF0AA4148A9C47DE917636042</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_410356eec83648b0913111265637a355" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Double IDSeller
    {
        get
        {
            return Buffer.GetDouble(BufferColumnIndexes[0]);
        }
    }
    public bool IDSeller_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[2]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String SellerName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool SellerName_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String ErrorColumnName
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ErrorColumnName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[5] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_410356eec83648b0913111265637a355.Properties.Settings.get_Default():SC_410356eec83648b0913111265637a355.Properties.Sett" +
    "ings")]

namespace SC_410356eec83648b0913111265637a355.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_410356eec83648b0913111265637a355</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_410356eec83648b0913111265637a355</msb:DisplayName>
    <msb:ProjectId>{61DB8A67-3A99-4BD5-9FAD-2CEA8F0DBF2E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_410356eec83648b0913111265637a355.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_410356eec83648b0913111265637a355")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_410356eec83648b0913111265637a355")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_410356eec83648b0913111265637a355.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_410356eec83648b0913111265637a355.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_410356eec83648b0913111265637a355.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_410356eec83648b0913111265637a355.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_410356eec83648b0913111265637a355.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_959EB7DCF0AA4148A9C47DE917636042.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGgjwGAAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAABjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALQ0AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAADBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADo
NAAAAAAAAEgAAAACAAUAWCIAAKQRAAABAAAAAAAAAPwzAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMANgAAAAEAABEDAigSAAAK
A28IAAAGbxMAAApvEAAABgIoEgAACnUOAAABCgMGA28KAAAGbxQAAApvDgAABioeAigUAAAGKioC
AwQFKBUAAAoqUgJ7FgAACgJ7FwAAChaUbxgAAAoqIgIWKBkAAAoqUgJ7FgAACgJ7FwAACheUbxoA
AAoqIgIXKBkAAAoqUgJ7FgAACgJ7FwAAChiUbxoAAAoqIgIYKBkAAAoqUgJ7FgAACgJ7FwAAChmU
bxsAAAoqIgIZKBkAAAoqJgIaAygcAAAKKloDLAgCGigdAAAKKnIBAABwcx4AAAp6JgIbAygcAAAK
KloDLAgCGygdAAAKKnIBAABwcx4AAAp6HgIoHwAACioeAiggAAAKKn4CKCEAAAoCAnMYAAAGfQEA
AAQCAnMZAAAGfQIAAAQqkgRyngAAcBpvIgAACiwVAgUCAygjAAAKDgRzBQAABm8WAAAGKkorBwID
bxcAAAYDbxIAAAYt8SoGKjoCKCQAAAoCA30DAAAEKjoCKCQAAAoCA30EAAAEKh4CKCQAAAoqrn4F
AAAELR5yrgAAcNAHAAACKCUAAApvJgAACnMnAAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoa
fgcAAAQqHgIoKAAACioucx8AAAaABwAABCoAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAACEBgAAI34AAPAGAAC8BwAAI1N0cmluZ3MAAAAArA4AACABAAAjVVMAzA8AABAAAAAj
R1VJRAAAANwPAADIAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAAIQAAAAgA
AAAHAAAAIAAAABEAAAAoAAAAEAAAAAEAAAADAAAADwAAABAAAAABAAAABQAAAAEAAAAAAJUDAQAA
AAAABgCMAvQFBgAgA/QFBgDYAeEFDwBoBgAABgAFArMEBgBvArMEBgBQArMEBgAHA7MEBgCsArME
BgDFArMEBgAcArMEBgA3AlsDCgDgAiUBDgAaAKsFCgB9BSUBEgBuBSUBCgAlBSUBCgAuByUBBgDx
BlsEBgC7AeEFBgCOBRQGBgAZBZ4EFgCLAX8DFgDsAX8DFgBzAYkEBgCgAfQFDgABAKsFBgDFBFsE
BgB4A1sEBgAIBVsEBgBGAVsEBgDUAFsEBgCzB7MEAAAAAGAAAAAAAAEAAQABABAAbgQAABAAAQAB
AAEAEABhBQAAPQABAAUAAQAQABAHAABJAAEAFAABABAA5QYAAE0AAwAYAAEAEACmBgAATQAEABkA
AAAQABsGdwZNAAUAGgAAARAA1QZ3BmUABwAeAAYA5QaKAAYApgaOAAEAHgeSAAEAHgeSABEAYgSW
ABEAYwGaABEArACeAFAgAAAAAMYAPgMGAAEAWCAAAAAAxgBJAwYAAQBgIAAAAADGAJAHogABAKIg
AAAAAIYY1AUGAAIAqiAAAAAAhhjUBSoAAgC1IAAAAACGCJ4FqAAFAMogAAAAAIYINgRRAAUA0yAA
AAAAhgi8AKwABQDoIAAAAACGCL0DUQAFAPEgAAAAAIYIeQSsAAUABiEAAAAAhggDBFEABQAPIQAA
AACGCAwBsAAFACQhAAAAAIYI7QNRAAUALSEAAAAAhgj4ABAABQA3IQAAAACGCNIDtAAGAE4hAAAA
AIYI3wQQAAcAWCEAAAAAhggaBLQACABvIQAAAACGAKcHUQAJAHchAAAAAIYA+AZRAAkAfyEAAAAA
hhjUBQYACQCfIQAAAADGAIMHuQAJAMQhAAAAAMYBfAeiAA0A1yEAAAAAxgGQB6IADgDZIQAAAACG
GNQFwwAPAOghAAAAAIYY1AXDABAA9yEAAAAAgxjUBQYAEQD/IQAAAACTCIoFyQARACsiAAAAAJMI
SwHOABEAMiIAAAAAkwhXAdMAEQA6IgAAAACWCAQH2QASAEEiAAAAAIYY1AUGABIASSIAAAAAkRja
Bd4AEgAAAAEAqwcAAAEAgwUAAAIAsAYAAAMAMwUAAAEAVQMAAAEAVQMAAAEAVQMAAAEAVQMAAAEA
aQAAAAIAGwEAAAMAgwUAAAQAMwUAAAEAgwUAAAEAqwcAAAEANAcAAAEANAcAAAEAVQMJANQFAQAR
ANQFBgAZANQFCgApANQFEAAxANQFEAA5ANQFEABBANQFEABJANQFEABRANQFEABZANQFEABhANQF
EABpANQFBgChANQFBgDBANQFFQDRANQFBgCRAD4DBgCRAEkDBgCRAI0AIADZAPQEJQBxAHEAJQB5
ANQFKgB5AIMFNAB5ALAGOACBAMoAPAB5AEMEQQCBADMARgCBAHUDJQB5AFIESwB5AEoEAQDhANQF
EAB5AKcHUQB5APgGUQCRANQFBgDpAN4GVQCRAMQGXACZANQFBgD5AOYAYgD5AK8HagCpANQFcADJ
ANQFBgAuAAsAAQEuABMACgEuABsAKQEuACMAMgEuACsAWwEuADMAWwEuADsAWwEuAEMAMgEuAEsA
YQEuAFMAWwEuAFsAeAFDAGMAwgHhAHsAwgHjAGsAwgGpAXMAKQHJAXMAKQEbAAMAAQAHAA0ACAAP
AAAAogXiAAAAOgTmAAAAwADqAAAAwQPmAAAAfQTqAAAABwTmAAAAEAHuAAAA8QPmAAAA/ADuAAAA
1gPmAAAA9wTuAAAAHgTmAAAAjgXyAAAAawH3AAAACAf8AAIABgADAAIABwAFAAIACAAHAAIACQAJ
AAIACgALAAIACwANAAIADAAPAAIADQARAAEADgATAAEADwAVAAEAEAAXAAEAEQAZAAIAGwAbAAIA
HAAdAAEAHQAdAAIAHgAfAASAAAABAAAAAAAAAAAAAAAAADwAAAAEAAAAAAAAAAAAAAB4AKMAAAAA
AA8AAAAAAAAAAAAAAIEAPgcAAAAADwAAAAAAAAAAAAAAgQA9BQAAAAAPAAAAAAAAAAAAAACBAFsH
AAAAAAQAAAAAAAAAAAAAAHgAWwQAAAAAAAAAAAEAAAAlBgAAAAAASURUU0NvbXBvbmVudE1ldGFE
YXRhMTAwAElEVFNDb21wb25lbnRNZXRhRGF0YTEzMABHZXRJbnQzMgBTQ185NTlFQjdEQ0YwQUE0
MTQ4QTlDNDdERTkxNzYzNjA0MgA8TW9kdWxlPgBJbnB1dElEAEdldElkZW50aWZpY2F0aW9uU3Ry
aW5nQnlJRABnZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAGdl
dF9FcnJvckNvZGUAR2V0RG91YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AHNldF9FcnJvckNvbHVtbk5hbWUAZ2V0X1NlbGxlck5hbWUASW5wdXROYW1lAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3Vy
Y2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5
UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmls
aXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBHZXRTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzk1OUVCN0RDRjBB
QTQxNDhBOUM0N0RFOTE3NjM2MDQyLmRsbABnZXRfRXJyb3JDb2RlX0lzTnVsbABzZXRfRXJyb3JD
b2x1bW5OYW1lX0lzTnVsbABnZXRfU2VsbGVyTmFtZV9Jc051bGwAZ2V0X0Vycm9yQ29sdW1uX0lz
TnVsbABzZXRfRXJyb3JEZXNjcmlwdGlvbl9Jc051bGwAZ2V0X0lEU2VsbGVyX0lzTnVsbABTZXRO
dWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAGdldF9FcnJvckNvbHVt
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAHNldF9FcnJvckRlc2NyaXB0aW9uAEdldEVy
cm9yRGVzY3JpcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFw
AE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABJbnB1dDBCdWZm
ZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0lE
U2VsbGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIALmN0b3IALmNj
dG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5
c3RlbS5SZXNvdXJjZXMAU0NfNDEwMzU2ZWVjODM2NDhiMDkxMzExMTI2NTYzN2EzNTUuUHJvcGVy
dGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzQxMDM1NmVlYzgzNjQ4
YjA5MTMxMTEyNjU2MzdhMzU1LlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4
ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVu
ZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlw
dENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJv
dwBOZXh0Um93AGdldF9Bc3NlbWJseQAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAg
AGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkA
ZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0
AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8ANAAxADAAMwA1ADYAZQBlAGMAOAAzADYA
NAA4AGIAMAA5ADEAMwAxADEAMQAyADYANQA2ADMANwBhADMANQA1AC4AUAByAG8AcABlAHIAdABp
AGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAACk2I/fZul8RZKucf/Z5dvjAAQgAQEIAyAAAQUgAQER
EQQgAQEOBSABARFdBAcBEjkEIAASbQQgAQ4ICSADARJBHQgSRQMGEkEDBh0IBCABDQgEIAECCAQg
AQgIBSACAQgcAyAAAgYgAgIOEXkFIAEdCAgHAAESfRGAgQUgABKAhQcgAgEOEoCFCLd6XFYZNOCJ
CImEXc2AgMyRAwYSFAMGEhgDBhJJAwYSVQMGElkDBhIgBSABARIMAyAADQMgAAgDIAAOBCABAQIJ
IAQBCA4SQRJFBSABARJJBAAAElUEAAASWQUAAQESWQQAABIgAwAAAQMoAA0DKAACAygACAMoAA4E
CAASVQQIABJZBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEA
AgAAAAAAKAEAI1NDXzQxMDM1NmVlYzgzNjQ4YjA5MTMxMTEyNjU2MzdhMzU1AAAFAQAAAAAWAQAR
Q29weXJpZ2h0IEAgIDIwMjEAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJh
bWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAANw0
AAAAAAAAAAAAAPY0AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoNAAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADQAMQAwADMANQA2AGUAZQBjADgAMwA2ADQAOABiADAAOQAxADMAMQAxADEAMgA2ADUA
NgAzADcAYQAzADUANQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOQA1ADkARQBCADcA
RABDAEYAMABBAEEANAAxADQAOABBADkAQwA0ADcARABFADkAMQA3ADYAMwA2ADAANAAyAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA5ADUA
OQBFAEIANwBEAEMARgAwAEEAQQA0ADEANAA4AEEAOQBDADQANwBEAEUAOQAxADcANgAzADYAMAA0
ADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANAAxADAA
MwA1ADYAZQBlAGMAOAAzADYANAA4AGIAMAA5ADEAMwAxADEAMQAyADYANQA2ADMANwBhADMANQA1
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAINQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_959eb7dcf0aa4148a9c47de917636042</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">3F</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Looping in Sales files\Importing Sales\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Script Component.Inputs[Input 0].Columns[IDSeller]"
                          cachedDataType="r8"
                          cachedName="IDSeller"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[IDSeller]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Script Component.Inputs[Input 0].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Script Component.Inputs[Input 0].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]" />
                        <inputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Script Component.Inputs[Input 0].Columns[SellerName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="SellerName"
                          lineageId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output].Columns[SellerName]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Looping in Sales files\Importing Sales\Script Component.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Looping in Sales files\Importing Sales\Script Component.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Script Component.Outputs[Output 0].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Looping in Sales files\Importing Sales\Script Component.Outputs[Output 0].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Looping in Sales files\Importing Sales\Script Component.Outputs[Output 0].Columns[ErrorDescription]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Looping in Sales files\Importing Sales\Script Component.Outputs[Output 0].Columns[ErrorDescription]"
                          name="ErrorDescription" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Looping in Sales files\Importing Sales.Paths[Derived Column Output]"
                  endId="Package\Looping in Sales files\Importing Sales\do Logging.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Looping in Sales files\Importing Sales\New columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Looping in Sales files\Importing Sales.Paths[Derived Column Output1]"
                  endId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Looping in Sales files\Importing Sales\add ID Manager.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Looping in Sales files\Importing Sales.Paths[Excel Source Output]"
                  endId="Package\Looping in Sales files\Importing Sales\add ID Manager.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Looping in Sales files\Importing Sales\Sales.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Looping in Sales files\Importing Sales.Paths[OLE DB Destination Error Output]"
                  endId="Package\Looping in Sales files\Importing Sales\Script Component.Inputs[Input 0]"
                  name="OLE DB Destination Error Output"
                  startId="Package\Looping in Sales files\Importing Sales\Insert staging_sales.Outputs[OLE DB Destination Error Output]" />
                <path
                  refId="Package\Looping in Sales files\Importing Sales.Paths[Output 0]"
                  endId="Package\Looping in Sales files\Importing Sales\New columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Looping in Sales files\Importing Sales\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Looping in Sales files\Rename Processed File"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="Rename Processed File"
          DTS:DTSID="{85103140-2A9A-47E7-9920-314DEA2265CB}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Rename Processed File"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="RenameFile"
              TaskSourcePath="User::SourceFileName"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::ProcessedFileName"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Looping in Sales files.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{DC0C7F4A-FE8F-4AEA-905D-33B449DD325E}"
          DTS:From="Package\Looping in Sales files\do Logging - start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Looping in Sales files\File exists?" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Looping in Sales files.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{8804E826-28B8-497F-A16A-B2BAE5F64A74}"
          DTS:From="Package\Looping in Sales files\File exists?"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Looping in Sales files\Importing Goals" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Looping in Sales files.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{C39CF72E-F0D3-4AF8-A02A-F544C41B7CEE}"
          DTS:From="Package\Looping in Sales files\Create directory Processed"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Looping in Sales files\Rename Processed File" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Looping in Sales files.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{02A0F272-2A84-4AE8-B902-8943C1905490}"
          DTS:From="Package\Looping in Sales files\Rename Processed File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Looping in Sales files\do Logging - finish" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Looping in Sales files.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{58887B04-52EE-4C12-91D4-522FB6C7A590}"
          DTS:From="Package\Looping in Sales files\Importing Goals"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Looping in Sales files\Importing Sales" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Looping in Sales files.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{B66972DB-1593-4497-952A-495EBB3DB19D}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::FileExists]==False"
          DTS:From="Package\Looping in Sales files\File exists?"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Looping in Sales files\do Logging - end" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Looping in Sales files.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{6DAED39B-FAF6-40C0-A7F1-59D1124A8280}"
          DTS:From="Package\Looping in Sales files\Importing Sales"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Looping in Sales files\Create directory Processed" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{EFBAD3B7-DCD3-4CFC-B6B6-73DBD9330289}"
          DTS:ObjectName="{EFBAD3B7-DCD3-4CFC-B6B6-73DBD9330289}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::SalesFileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{CA0D5197-6C91-484A-A19D-0EEFFC45DCE2}"
      DTS:From="Package\Looping in Sales files"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\do Logging - finish"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163.2,41.6"
          Id="Package\do Logging - finish"
          TopLeft="618.285716657736,437.117647691582" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Looping in Sales files\Create directory Processed"
          TopLeft="575.92857477373,96.9117646415346" />
        <NodeLayout
          Size="158.4,41.6"
          Id="Package\Looping in Sales files\do Logging - end"
          TopLeft="186.428571623199,118.235293195322" />
        <NodeLayout
          Size="148,41.6"
          Id="Package\Looping in Sales files\do Logging - finish"
          TopLeft="382.571424885672,180.529411786156" />
        <NodeLayout
          Size="137.6,41.6"
          Id="Package\Looping in Sales files\do Logging - start"
          TopLeft="10,6.00000000000001" />
        <NodeLayout
          Size="131.2,41.6"
          Id="Package\Looping in Sales files\File exists?"
          TopLeft="182,8" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Looping in Sales files\Importing Goals"
          TopLeft="373.257149377161,9.52941251543568" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Looping in Sales files\Importing Sales"
          TopLeft="572.642856753602,10.5882353584659" />
        <NodeLayout
          Size="148,41.6"
          Id="Package\Looping in Sales files\Rename Processed File"
          TopLeft="577.78571759438,179.676470534612" />
        <EdgeLayout
          Id="Package\Looping in Sales files.PrecedenceConstraints[Constraint]"
          TopLeft="147.6,27.8">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="34.4,0"
              Start="0,0"
              End="26.9,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="26.9,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Looping in Sales files.PrecedenceConstraints[Constraint 1]"
          TopLeft="313.2,29.5647062577178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="60.057149377161,0"
              Start="0,0"
              End="52.557149377161,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="52.557149377161,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Looping in Sales files.PrecedenceConstraints[Constraint 2]"
          TopLeft="652.857146184055,138.511764641535">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.1647058930774"
              Start="0,0"
              End="0,33.6647058930774">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.6647058930774" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Looping in Sales files.PrecedenceConstraints[Constraint 3]"
          TopLeft="577.78571759438,200.902941160384">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-47.2142927087083,0"
              Start="0,0"
              End="-39.7142927087083,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-39.7142927087083,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Looping in Sales files.PrecedenceConstraints[Constraint 4]"
          TopLeft="526.857149377161,30.8588239369508">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="45.785707376441,0"
              Start="0,0"
              End="38.285707376441,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="38.285707376441,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Looping in Sales files.PrecedenceConstraints[Constraint 5]"
          TopLeft="247.6,49.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="18.0285716231988,68.6352931953224"
              Start="0,0"
              End="18.0285716231988,61.1352931953224">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.3176465976612" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.3176465976612"
                    Point2="0,34.3176465976612"
                    Point3="4,34.3176465976612" />
                  <mssgle:LineSegment
                    End="14.0285716231988,34.3176465976612" />
                  <mssgle:CubicBezierSegment
                    Point1="14.0285716231988,34.3176465976612"
                    Point2="18.0285716231988,34.3176465976612"
                    Point3="18.0285716231988,38.3176465976612" />
                  <mssgle:LineSegment
                    End="18.0285716231988,61.1352931953224" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="1.01428581159938,39.3176465976612,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Looping in Sales files.PrecedenceConstraints[Constraint 6]"
          TopLeft="651.485715763666,52.1882353584659">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.7235292830687"
              Start="0,0"
              End="0,37.2235292830687">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.2235292830687" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="835.2,332"
          Size="835.2,375.2"
          Id="Package\Looping in Sales files"
          TopLeft="7.8571428206501,7.88235303769889" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="425.45714282065,383.082353037699">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="274.428573837086,54.0352946538831"
              Start="0,0"
              End="274.428573837086,46.5352946538831">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.0176473269416" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.0176473269416"
                    Point2="0,27.0176473269416"
                    Point3="4,27.0176473269416" />
                  <mssgle:LineSegment
                    End="270.428573837086,27.0176473269416" />
                  <mssgle:CubicBezierSegment
                    Point1="270.428573837086,27.0176473269416"
                    Point2="274.428573837086,27.0176473269416"
                    Point3="274.428573837086,31.0176473269416" />
                  <mssgle:LineSegment
                    End="274.428573837086,46.5352946538831" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="121.972939262293,32.0176473269416,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Looping in Sales files\Importing Goals">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="120,41.6"
          Id="Package\Looping in Sales files\Importing Goals\Goals"
          TopLeft="80.9242430564128,35.8333333333334" />
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\Looping in Sales files\Importing Goals\Logging audit_log"
          TopLeft="573.833337335359,304.647059477737" />
        <NodeLayout
          Size="140.8,41.6"
          Id="Package\Looping in Sales files\Importing Goals\New columns"
          TopLeft="551.476193918664,217.452942163144" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Looping in Sales files\Importing Goals\Destino OLE DB"
          TopLeft="343,37.1666666666667" />
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\Looping in Sales files\Importing Goals\Script Component"
          TopLeft="492.142865524001,124.647060571657" />
        <EdgeLayout
          Id="Package\Looping in Sales files\Importing Goals.Paths[Output 0]"
          TopLeft="573.342865524001,166.247060571657">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="48.5333283946633,51.2058815914868"
              Start="0,0"
              End="48.5333283946633,43.7058815914868">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.6029407957434" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.6029407957434"
                    Point2="0,25.6029407957434"
                    Point3="4,25.6029407957434" />
                  <mssgle:LineSegment
                    End="44.5333283946633,25.6029407957434" />
                  <mssgle:CubicBezierSegment
                    Point1="44.5333283946633,25.6029407957434"
                    Point2="48.5333283946633,25.6029407957434"
                    Point3="48.5333283946633,29.6029407957434" />
                  <mssgle:LineSegment
                    End="48.5333283946633,43.7058815914868" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="6.11725013483165,30.6029407957434,36.298828125,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Looping in Sales files\Importing Goals.Paths[Derived Column Output]"
          TopLeft="621.876193918664,259.052942163144">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33.1571434166956,45.5941173145928"
              Start="0,0"
              End="33.1571434166956,38.0941173145928">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.7970586572964" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.7970586572964"
                    Point2="0,22.7970586572964"
                    Point3="4,22.7970586572964" />
                  <mssgle:LineSegment
                    End="29.1571434166956,22.7970586572964" />
                  <mssgle:CubicBezierSegment
                    Point1="29.1571434166956,22.7970586572964"
                    Point2="33.1571434166956,22.7970586572964"
                    Point3="33.1571434166956,26.7970586572964" />
                  <mssgle:LineSegment
                    End="33.1571434166956,38.0941173145928" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1.5708423541522,27.7970586572964,36.298828125,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Looping in Sales files\Importing Goals.Paths[Saída de Origem do Excel]"
          TopLeft="200.924243056413,57.3">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="142.075756943587,0"
              Start="0,0"
              End="134.575756943587,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="134.575756943587,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="49.1384644092935,5,36.298828125,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Looping in Sales files\Importing Goals.Paths[Saída de Erro de Destino OLE DB]"
          TopLeft="419.4,78.7666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="153.942865524001,45.8803939049906"
              Start="0,0"
              End="153.942865524001,38.3803939049906">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.9401969524953" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.9401969524953"
                    Point2="0,22.9401969524953"
                    Point3="4,22.9401969524953" />
                  <mssgle:LineSegment
                    End="149.942865524001,22.9401969524953" />
                  <mssgle:CubicBezierSegment
                    Point1="149.942865524001,22.9401969524953"
                    Point2="153.942865524001,22.9401969524953"
                    Point3="153.942865524001,26.9401969524953" />
                  <mssgle:LineSegment
                    End="153.942865524001,38.3803939049906" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.4359695817495,27.9401969524953,192.8148046875,12.1953125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Looping in Sales files\Importing Goals\Logging audit_log">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Looping in Sales files\Importing Goals\Goals">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Looping in Sales files\Importing Goals\Destino OLE DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Looping in Sales files\Importing Sales">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="102.4,41.6"
          Id="Package\Looping in Sales files\Importing Sales\Sales"
          TopLeft="37.6190476068834,16.790849662478" />
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\Looping in Sales files\Importing Sales\Script Component"
          TopLeft="406.619047606883,202.188235540786" />
        <NodeLayout
          Size="172.8,41.6"
          Id="Package\Looping in Sales files\Importing Sales\Insert staging_sales"
          TopLeft="191.57142522627,109.089869184523" />
        <NodeLayout
          Size="131.2,41.6"
          Id="Package\Looping in Sales files\Importing Sales\do Logging"
          TopLeft="660.571426162914,376.588235540786" />
        <NodeLayout
          Size="155.2,41.6"
          Id="Package\Looping in Sales files\Importing Sales\add ID Manager"
          TopLeft="202.047619315232,19.4705882138447" />
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\Looping in Sales files\Importing Sales\New columns"
          TopLeft="524.035708568534,289.312090312826" />
        <EdgeLayout
          Id="Package\Looping in Sales files\Importing Sales.Paths[Derived Column Output1]"
          TopLeft="278.809522270751,61.0705882138447">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.0192809706783"
              Start="0,0"
              End="0,40.5192809706783">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5192809706783" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Looping in Sales files\Importing Sales.Paths[Derived Column Output]"
          TopLeft="595.235708568534,330.912090312826">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="130.93571759438,45.67614522796"
              Start="0,0"
              End="130.93571759438,38.17614522796">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.83807261398" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.83807261398"
                    Point2="0,22.83807261398"
                    Point3="4,22.83807261398" />
                  <mssgle:LineSegment
                    End="126.93571759438,22.83807261398" />
                  <mssgle:CubicBezierSegment
                    Point1="126.93571759438,22.83807261398"
                    Point2="130.93571759438,22.83807261398"
                    Point3="130.93571759438,26.83807261398" />
                  <mssgle:LineSegment
                    End="130.93571759438,38.17614522796" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Looping in Sales files\Importing Sales.Paths[Output 0]"
          TopLeft="487.819047606883,243.788235540786">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="107.416660961651,45.52385477204"
              Start="0,0"
              End="107.416660961651,38.02385477204">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.76192738602" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.76192738602"
                    Point2="0,22.76192738602"
                    Point3="4,22.76192738602" />
                  <mssgle:LineSegment
                    End="103.416660961651,22.76192738602" />
                  <mssgle:CubicBezierSegment
                    Point1="103.416660961651,22.76192738602"
                    Point2="107.416660961651,22.76192738602"
                    Point3="107.416660961651,26.76192738602" />
                  <mssgle:LineSegment
                    End="107.416660961651,38.02385477204" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Looping in Sales files\Importing Sales.Paths[OLE DB Destination Error Output]"
          TopLeft="277.97142522627,150.689869184523">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="209.847622380613,51.4983663562629"
              Start="0,0"
              End="209.847622380613,43.9983663562629">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.7491831781315" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.7491831781315"
                    Point2="0,25.7491831781315"
                    Point3="4,25.7491831781315" />
                  <mssgle:LineSegment
                    End="205.847622380613,25.7491831781315" />
                  <mssgle:CubicBezierSegment
                    Point1="205.847622380613,25.7491831781315"
                    Point2="209.847622380613,25.7491831781315"
                    Point3="209.847622380613,29.7491831781315" />
                  <mssgle:LineSegment
                    End="209.847622380613,43.9983663562629" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="11.8295533778065,30.7491831781315,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Looping in Sales files\Importing Sales.Paths[Excel Source Output]"
          TopLeft="140.019047606883,38.9307189381613">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="62.0285717083486,0"
              Start="0,0"
              End="54.5285717083486,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="54.5285717083486,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Looping in Sales files\Importing Sales\Sales">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Looping in Sales files\Importing Sales\Insert staging_sales">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Looping in Sales files\Importing Sales\do Logging">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>